package election.web.servlets;

import java.io.IOException;

import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import election.web.exceptions.ElectionException;
import wendall.stephen.election.beans.CandidatesLocal;
import wendall.stephen.election.beans.ElectoralRollLocal;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet("/signin")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	@EJB
	private ElectoralRollLocal electors;
	private CandidatesLocal candidates;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public LoginServlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();	
		try {
			if (session.getAttribute("voterName") != null) {
				throw new ElectionException(
						"Attempt to sign in when already signed in");
			}
			String voterName = request.getParameter("voterName").trim();
			String password = request.getParameter("password").trim();
			if (voterName == null || voterName.isEmpty()) {
				throw new ElectionException("Voter name required for login");
			}
			if (password == null || password.isEmpty()) {
				throw new ElectionException("Voter ID required for login");
			}
			if (! electors.authenticate(voterName, password)) {
				throw new ElectionException("Voter " + voterName
						+ " cannot be authenticated");
			}
			session.setAttribute( "voterName",voterName );
			request.setAttribute("candidates", candidates.getCandidateNames() );
			request.getRequestDispatcher("ballot.jsp").forward(request,
					response);
		} catch (ElectionException e) {
			session.invalidate();
			request.setAttribute("message", e.getMessage());
			request.getRequestDispatcher("errorPage.jsp").forward(request,
					response);
		}
	}
}
